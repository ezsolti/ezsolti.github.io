Getting started with feign
=============================

Below you can find a basic example and the working principle of ``feign``

Units
-----

All length is in cm, densities in g/cm3, energy in MeV.

Usage
-----

Several well-documented notebooks will guide you under the Examples. The examples describe how to build simple or more complicated experimental setups, and how to visualize the traveled distance maps, the contribution maps and the geometric efficiency.

Here the input of a simple 4x4 assembly can be found, which is discussed also in `Working principle`_. The pins are fuel rods without any cladding (material f) surrounded by water (material w). The example assumes that you have managed to install ``feign`` and obtain some data files after following the instructions at the `Installation page <https://ezsolti.github.io/feign/installation.html>`_

First, one needs to import the feign modules.

.. code-block:: python

   from feign.geometry import *
   from feign.blocks import *

Then define the materials with a unique identifier and set their densities and the path of the mass attenuation data.

.. code-block:: python
   f=Material('1')
   f.set_density(10.5) #g/cm3
   f.set_path(('/data/UO2.dat',1))

   w=Material('2')
   w.set_density(1.0)
   w.set_path(('/data/H2O.dat',1))

Working principle
-----------------

``feign`` implements a 2D point-kernel method to estimate the uncollided point-detector gamma flux around a rectangular spent fuel assembly. The 2D approximation is valid when the fuel assembly is viewed through a horizontally aligned collimator.

After defining an experimental setup with a rectangular fuel assembly placed in the center, the code will iterate through each pin location and trace a ray from the pin towards a detector point. Tracing here means that it will determine how long distance the uncollided ray would travel in various materials. 

Let's consider a simple example as below: there is a 4x4 assembly, the pins are fuel rods without any cladding (material f) surrounded by water (material w). If one draws a line from a pin towards a detector (red circle), some parts of the line are passing through other pins. The code evaluates where are the intersections of the rays with pins (and optionally other absorber elements placed between the detector and the assembly), and determines the total distance traveled in a given material:

.. math::

   d_f=f_1+f_2+f_3+f_4

.. math::

   d_w=w_1+w_2+w_3+w_4

.. image:: rayDemo.png

After doing this for each pin, it is possible to build a traveled distance map, which is represented in the code as a dictionary. The keys are material identifiers and the values are matrices describing the pin-wise traveled distance through the given material. Based on these traveled distance maps and on the total attenuation coefficients of the materials, it is possible to compute a contribution map. Contribution here means the probability that a ray emitted from a certain pin will hit the detector, such as

.. math::

   \frac{1}{4\pi R_{i}^2}\prod\limits_m e^{-\mu_m(E) d_{i,m}}

is this probability for each energy :math:`E` requested by the user that a gamma-ray emitted from position :math:`i` hits the detector without collision. Where :math:`R_i` is the distance between the source position and the detector, :math:`\mu_m` is the total attenuation coefficient of material :math:`m` and :math:`d_{i,m}` is the distance traveled by a gamma-ray emitted from position :math:`i` through material :math:`m`. In the above example, for the selected pin this probability would be 

.. math::

   \frac{1}{4\pi (d_f+d_w)^2}\cdot e^{-\mu_f(E) d_{f}}\cdot e^{-\mu_w(E) d_{w}}

The average of all these pin-wise probabilities is results in the geometric efficiency (in :math:`\frac{1}{\rm particle}` units) of the experimental setup.

However, emitting a ray from the middle of the pin is not necessarily a valid approximation. Thus, ``feign`` allows for setting how many random source points should be sampled from each pin. In this case the code is able to calculate an average geometric efficiency and its standard deviation.

